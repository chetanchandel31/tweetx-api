datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId      String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAtMs DateTime @default(now())
  updatedAtMs DateTime @updatedAt

  name              String @unique
  email             String @unique
  encryptedPassword String
  salt              String

  posts Post[]

  followers Follows[] @relation("following")
  following Follows[] @relation("followers")
}

model Follows {
  followId String @id @default(auto()) @map("_id") @db.ObjectId

  follower   User   @relation("followers", fields: [followerId], references: [userId])
  followerId String @db.ObjectId // if user's userId appears as followerId, he is following someone, hence the inversion

  following   User   @relation("following", fields: [followingId], references: [userId])
  followingId String @db.ObjectId // if user's userId appears as followingId, he is being followed/having a follower, hence the inversion

  @@unique([followingId, followerId])
}

model Post {
  postId      String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAtMs DateTime @default(now())
  updatedAtMs DateTime @updatedAt

  content String

  user   User   @relation(fields: [userId], references: [userId])
  userId String @db.ObjectId
}
